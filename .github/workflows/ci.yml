# Reference: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: CI
on:
    push:
    pull_request:
        types:
            - edited
            - opened
            - reopened
            - synchronize
defaults:
    run:
        shell: bash
env:
    DOTNET_CLI_TELEMETRY_OPTOUT: true
    DOTNET_NOLOGO: true
jobs:
    ci:
        strategy:
            matrix:
                os:
                    - macos-latest
                    - ubuntu-latest
                    - windows-latest
                cfg:
                    - Debug
                    - Release
        runs-on: ${{ matrix.os }}
        steps:
            - uses: xt0rted/markdownlint-problem-matcher@v1
            - name: Clone repository
              uses: actions/checkout@v2.3.2
              with:
                  fetch-depth: 0
            - name: Set up Node.js
              uses: actions/setup-node@v1.4.3
            - name: Set up .NET
              uses: actions/setup-dotnet@v1.6.0
              with:
                  dotnet-version: 5.0.100-preview.8.20417.9
            - name: Install dependencies
              run: |
                  npm install markdownlint-cli@0.23.2 -g
                  dotnet tool restore
                  dotnet restore
            - name: Lint Markdown files
              run: |
                  markdownlint *.md
            - name: Build project
              run: |
                  dotnet build -c ${{ matrix.cfg }} --no-restore
            - name: Pack project
              run: |
                  dotnet pack -c ${{ matrix.cfg }} --no-build
            - name: Publish project
              run: |
                  rids="linux-arm linux-arm64 linux-x64 osx-x64 win-arm win-arm64 win-x64 win-x86"
                  for rid in $rids; do
                      dotnet publish -c ${{ matrix.cfg }} -r $rid -p:PublishSingleFile=true
                  done
            - name: Test project
              run: |
                  dotnet test -c ${{ matrix.cfg }} --no-build
            - name: Upload GitHub packages
              if: github.event_name == 'push' && github.repository == 'flare-lang/flare' && github.ref == 'refs/heads/master' && matrix.os == 'windows-latest' && matrix.cfg == 'Release'
              run: |
                  DOTNET_ROLL_FORWARD=LatestMajor dotnet gpr push src/*/bin/Release/*.nupkg -k ${{ secrets.GITHUB_TOKEN }}
            - name: Notify Discord
              if: (cancelled() || failure()) && github.event_name == 'push' && github.repository == 'flare-lang/flare'
              uses: sarisia/actions-status-discord@v1.7.0
              with:
                  webhook: ${{ secrets.DISCORD_BUILDS_WEBHOOK }}
